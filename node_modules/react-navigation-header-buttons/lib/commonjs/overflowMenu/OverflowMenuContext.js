"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useOverflowMenu = exports.OverflowMenuContext = exports.OVERFLOW_TOP = void 0;
var _react = require("react");
var _reactNative = require("react-native");
const OVERFLOW_TOP = exports.OVERFLOW_TOP = 15;
const warn = () => {
  // the noop value will be replaced by HeaderButtonsProvider rendered in app root
  if (process.env.NODE_ENV !== 'production') {
    const message = _reactNative.Platform.select({
      android: ` - which is the default handler on android - but you forgot to wrap your root component in <HeaderButtonsProvider />. 
 Import it like this: "import {HeaderButtonsProvider} from 'react-navigation-header-buttons/HeaderButtonsProvider'.`,
      ios: `but you forgot to wrap your root component in <HeaderButtonsProviderDropdownMenu />. Import it like this: "import {HeaderButtonsProviderDropdownMenu} from 'react-navigation-header-buttons/HeaderButtonsProviderDropdownMenu'".`,
      default: `but you forgot to wrap your root component in <HeaderButtonsProvider />. 
Import it like this: "import {HeaderButtonsProvider} from 'react-navigation-header-buttons/HeaderButtonsProvider'.`
    });
    console.warn('It seems like you tried to open / close the overflow menu using the overflowMenuPressHandlerDropdownMenu, ' + message + '\nPlease check the installation instructions in the react-navigation-header-buttons readme :)');
  }
};
const OverflowMenuContext = exports.OverflowMenuContext = /*#__PURE__*/(0, _react.createContext)({
  presentMenu: warn,
  closeMenu: warn
});
const useOverflowMenu = () => (0, _react.useContext)(OverflowMenuContext);
exports.useOverflowMenu = useOverflowMenu;
//# sourceMappingURL=OverflowMenuContext.js.map