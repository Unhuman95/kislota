"use strict";

import * as React from 'react';
import { HeaderButtonComponentContext } from "./HeaderButtonComponentContext.js";
import { useOverflowMenu } from "./overflowMenu/OverflowMenuContext.js";
import { defaultRenderVisibleButton } from "./HeaderButton.js";
import { MenuItem } from "./overflowMenu/vendor/MenuItem.js";
import { jsx as _jsx } from "react/jsx-runtime";
export function HiddenItem({
  onPress,
  ...otherProps
}) {
  const {
    closeMenu
  } = useOverflowMenu();

  // when rendering dropdown menu (e.g. android default), the return value is actually rendered
  // when we show action sheet, we do not render the returned value,
  // but just extract title, onPress and destructive passed to HiddenItem. HiddenItem() is not called
  const onMenuItemPress = nativeEvent => {
    closeMenu();
    onPress && onPress(nativeEvent);
  };
  return /*#__PURE__*/_jsx(MenuItem, {
    ...otherProps,
    onPress: onMenuItemPress
  });
}

// TODO check RTL
export function Item(props) {
  const HeaderButtonComponent = React.useContext(HeaderButtonComponentContext);
  // HeaderButtonComponent (HeaderButton by default) already is provided iconSize, icon color and etc.
  // Item itself will likely only have title, onPress and iconName
  // but also can override iconSize, icon color, etc. if needed
  return /*#__PURE__*/_jsx(HeaderButtonComponent, {
    renderButton: defaultRenderVisibleButton,
    ...props
  });
}
//# sourceMappingURL=HeaderItems.js.map