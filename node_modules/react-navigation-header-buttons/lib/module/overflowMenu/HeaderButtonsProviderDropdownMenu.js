"use strict";

import { useCallback, useMemo, useState } from 'react';
import { Dimensions, Platform } from 'react-native';
import { useTheme } from '@react-navigation/native';
import { ButtonsExtraMarginContext } from "../ButtonsWrapper.js";
import * as React from 'react';
import { OverflowMenuContext } from "./OverflowMenuContext.js";
import { Menu } from "./vendor/Menu.js";
import { useSafeAreaInsets } from 'react-native-safe-area-context';
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
export const HeaderButtonsProviderDropdownMenu = ({
  children,
  spaceAboveMenu,
  stackType
}) => {
  const [menuState, setMenuState] = useState({
    visible: false,
    position: {
      x: Dimensions.get('window').width - 10,
      y: 40
    },
    elements: null
  });
  const {
    colors: {
      card
    }
  } = useTheme();
  const {
    top
  } = useSafeAreaInsets();
  const defaultSpaceAboveOverflowMenu = Platform.select({
    ios: 0,
    default: top
  });
  const appliedSpaceAboveMenu = spaceAboveMenu ?? defaultSpaceAboveOverflowMenu + 5;
  const closeMenu = useCallback(() => {
    setMenuState(prevState => ({
      ...prevState,
      visible: false
    }));
  }, []);
  const presentMenu = useCallback(params => {
    setMenuState(prevState => {
      const position = params ? {
        x: params.x,
        y: params.y + appliedSpaceAboveMenu
      } : prevState.position;
      const elements = params ? params.elements : prevState.elements;
      return {
        ...prevState,
        position,
        elements,
        visible: true
      };
    });
  }, [appliedSpaceAboveMenu]);
  const value = useMemo(() => ({
    presentMenu,
    closeMenu
  }), [presentMenu, closeMenu]);
  const extraMarginValue = stackType === 'native' ? 'alreadyHandled' : 'toBeHandled';
  const {
    visible,
    position,
    elements
  } = menuState;
  const contentStyle = useMemo(() => ({
    backgroundColor: card
  }), [card]);
  return /*#__PURE__*/_jsx(OverflowMenuContext.Provider, {
    value: value,
    children: /*#__PURE__*/_jsxs(ButtonsExtraMarginContext.Provider, {
      value: extraMarginValue,
      children: [React.Children.only(children), /*#__PURE__*/_jsx(Menu, {
        visible: visible,
        onDismiss: closeMenu,
        anchor: position,
        contentStyle: contentStyle,
        children: elements
      })]
    })
  });
};
//# sourceMappingURL=HeaderButtonsProviderDropdownMenu.js.map