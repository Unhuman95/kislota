"use strict";

import * as React from 'react';
import { StyleSheet, Text, View } from 'react-native';
import { PlatformPressable } from '@react-navigation/elements';
import { useTheme } from '@react-navigation/native';
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
/**
 * A component to show a single list item inside a Menu.
 */
export function MenuItem(props) {
  const {
    icon,
    title,
    disabled,
    onPress,
    style,
    titleStyle,
    testID
  } = props;
  const {
    dark,
    colors: {
      text
    }
  } = useTheme();
  const disabledColor = dark ? styles.darkDisabled : styles.lightDisabled;
  const titleColor = disabled ? disabledColor : {
    color: text
  };
  const themePressColorAndroid = dark ? 'rgba(255, 255, 255, .32)' : 'rgba(0, 0, 0, .32)';
  return /*#__PURE__*/_jsx(PlatformPressable, {
    style: [styles.container, style],
    onPress: onPress,
    disabled: disabled,
    testID: testID,
    pressColor: themePressColorAndroid,
    children: /*#__PURE__*/_jsxs(View, {
      style: styles.row,
      children: [/*#__PURE__*/React.isValidElement(icon) && /*#__PURE__*/_jsx(View, {
        style: [styles.item, styles.icon],
        pointerEvents: "box-none",
        children: icon
      }), /*#__PURE__*/_jsx(View, {
        style: [styles.item, styles.content, icon != null ? styles.widthWithIcon : undefined],
        pointerEvents: "none",
        children: /*#__PURE__*/_jsx(Text, {
          selectable: false,
          numberOfLines: 1,
          style: [styles.title, titleColor, titleStyle],
          children: title
        })
      })]
    })
  });
}
const minWidth = 112;
const maxWidth = 280;
const iconWidth = 25;
const styles = StyleSheet.create({
  container: {
    paddingHorizontal: 8,
    minWidth,
    maxWidth,
    height: 48,
    justifyContent: 'center'
  },
  row: {
    flexDirection: 'row'
  },
  icon: {
    width: iconWidth
  },
  title: {
    fontSize: 16
  },
  item: {
    marginHorizontal: 8
  },
  content: {
    justifyContent: 'center',
    minWidth: minWidth - 16,
    maxWidth: maxWidth - 16
  },
  widthWithIcon: {
    maxWidth: maxWidth - (iconWidth + 48)
  },
  lightDisabled: {
    color: 'rgba(0, 0, 0, 0.32)'
  },
  darkDisabled: {
    color: 'rgba(255, 255, 255, 0.32)'
  }
});
//# sourceMappingURL=MenuItem.js.map